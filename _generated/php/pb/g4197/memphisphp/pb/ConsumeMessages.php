<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consumer.proto

namespace g4197\memphisphp\pb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>pb.ConsumeMessages</code>
 */
class ConsumeMessages extends \Google\Protobuf\Internal\Message
{
    protected $data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \g4197\memphisphp\pb\CreateConsumerRequest $start
     *     @type \g4197\memphisphp\pb\Stop $stop
     * }
     */
    public function __construct($data = NULL) {
        \g4197\memphisphp\metadata\Consumer::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.pb.CreateConsumerRequest start = 1;</code>
     * @return \g4197\memphisphp\pb\CreateConsumerRequest|null
     */
    public function getStart()
    {
        return $this->readOneof(1);
    }

    public function hasStart()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.pb.CreateConsumerRequest start = 1;</code>
     * @param \g4197\memphisphp\pb\CreateConsumerRequest $var
     * @return $this
     */
    public function setStart($var)
    {
        GPBUtil::checkMessage($var, \g4197\memphisphp\pb\CreateConsumerRequest::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.pb.Stop stop = 2;</code>
     * @return \g4197\memphisphp\pb\Stop|null
     */
    public function getStop()
    {
        return $this->readOneof(2);
    }

    public function hasStop()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.pb.Stop stop = 2;</code>
     * @param \g4197\memphisphp\pb\Stop $var
     * @return $this
     */
    public function setStop($var)
    {
        GPBUtil::checkMessage($var, \g4197\memphisphp\pb\Stop::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getData()
    {
        return $this->whichOneof("data");
    }

}

